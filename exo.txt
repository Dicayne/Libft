
script de test https://github.com/alelievr/libft-unit-test.git

SRCS = 	srcs/ft_atoi.c			srcs/ft_isalnum.c	srcs/ft_isalpha.c	\
		srcs/ft_isascii.c		srcs/ft_isdigit.c	srcs/ft_isprint.c	\
		srcs/ft_strchr.c		srcs/ft_strlcpy.c	srcs/ft_strlen.c	\
		srcs/ft_strncmp.c		srcs/ft_strrchr.c	srcs/ft_tolower.c	\
		srcs/ft_toupper.c		srcs/ft_strlcat.c	srcs/ft_strnstr.c	\
		srcs/ft_memset.c		srcs/ft_bzero.c		srcs/ft_memcpy.c	\
		srcs/ft_memccpy.c		srcs/ft_memcmp.c	srcs/ft_memchr.c	\
		srcs/ft_memmove.c		srcs/ft_strdup.c	srcs/ft_calloc.c	\
		srcs/ft_substr.c		srcs/ft_strjoin.c	srcs/ft_itoa.c		\
		srcs/ft_strmapi.c		srcs/ft_split.c		srcs/ft_strtrim.c	\
		srcs/ft_putchar_fd.c	 ft_putstr_fd.c	 ft_putendl_fd.c\
		srcs/ft_putnbr_fd.c	

https://github.com/Eywek/42/blob/master/fillit/libft/ft_strjoin.c


main memchr 

int main(int ac, char **av)
{
	char str[100] = "";
	int c = -1000000;
	int n = ac == 2 ? atoi(av[1]) : 0;

	while (c < 1000000)
	{
		if (ft_memchr(str, c, n) != memchr(str, c , n))
			break;
		c++;
	}
	if (c != 1000000)
		printf("%p, %p", ft_memchr(str, c, n), memchr(str, c, n));
}

// void	fft_lstclear(t_list **lst, void (*del)(void*))
// {
// 	t_list *ptr;

// 	ptr = *lst;
// 	while (ptr != NULL)
// 	{
// 		del(ptr->content);
// 		free(ptr);
// 		ptr = ptr->next;
// 	}
// 	*lst = NULL;
// }